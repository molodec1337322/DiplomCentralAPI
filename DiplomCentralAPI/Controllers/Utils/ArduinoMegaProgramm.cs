namespace DiplomCentralAPI.Controllers.Utils
{
    public class ArduinoMegaProgramm
    {
        public string GetProgramm(int Direction, int Deformation, int PauseDuration)
        {
            return "#include <Wire.h> // библиотека I2C\r\n// Пины подключения входов контроллеров Нано \r\n#define PIN_TOWARD_1 23  // пин для адресации работы вперед\r\n#define PIN_BACKWARD_1 25 // пин для адресации работы назад\r\n\r\n#define PIN_TOWARD_2 29\r\n#define PIN_BACKWARD_2 27\r\n\r\n#define PIN_TOWARD_3 31\r\n#define PIN_BACKWARD_3 33\r\n\r\n#define PIN_TOWARD_4 35\r\n#define PIN_BACKWARD_4 37\r\n\r\n#define PIN_TOWARD_5 41\r\n#define PIN_BACKWARD_5 39\r\n\r\n#define PIN_TOWARD_6 45\r\n#define PIN_BACKWARD_6 43\r\n\r\n#define PIN_TOWARD_7 49\r\n#define PIN_BACKWARD_7 47\r\n\r\n#define PIN_TOWARD_8 53\r\n#define PIN_BACKWARD_8 51\r\n// ----------- регуляторы --\r\n#define WHEEL_1 A15 // колесо\r\n#define WHEEL_2 A14\r\n#define WHEEL_3 A13\r\n#define WHEEL_4 A12\r\n#define WHEEL_5 A11\r\n#define WHEEL_6 A10\r\n#define WHEEL_7 A9\r\n#define SLIDER_1 A8 // слайдер\r\n#define SLIDER_2 A7\r\n#define SLIDER_3 A6\r\n#define SLIDER_4 A5\r\n#define SLIDER_5 A4\r\n#define SLIDER_6 A3\r\n\r\nuint8_t  Pin[] = {PIN_TOWARD_1, PIN_BACKWARD_1, PIN_TOWARD_2, PIN_BACKWARD_2,\r\n                  PIN_TOWARD_3, PIN_BACKWARD_3, PIN_TOWARD_4, PIN_BACKWARD_4,\r\n                  PIN_TOWARD_5, PIN_BACKWARD_5, PIN_TOWARD_6, PIN_BACKWARD_6,\r\n                  PIN_TOWARD_7, PIN_BACKWARD_7, PIN_TOWARD_8, PIN_BACKWARD_8};\r\nint  address = 0;\r\nbool Rect[16]; // ректы для задания рабочих адресов\r\nuint32_t timerPAUSE, durationPAUSE; // таймер и период временной дискретизации деформации\r\nint Deformation = 0; // деформация\r\nint Direction; // направление деформации\r\nconst int Amplitude = 4095;// максимальная деформация\r\nint channelIncrement = 2; // шаг изменения номеров каналов\r\nbool flagDirection = true; // флаг изменения направления каналов\r\n\r\nvoid setup() {\r\n\r\n  Wire.begin(); // join I2C bus as Master\r\n  Serial.begin(9600);\r\n  //  Serial.begin(115200);\r\n  pinMode(SLIDER_1, INPUT); // устанавливаем на вход\r\n  pinMode(SLIDER_2, INPUT); //\r\n  pinMode(SLIDER_3, INPUT); //\r\n  pinMode(SLIDER_4, INPUT); //\r\n  pinMode(SLIDER_5, INPUT); //\r\n  pinMode(SLIDER_6, INPUT); //\r\n  pinMode(WHEEL_1, INPUT); //\r\n  pinMode(WHEEL_2, INPUT); //\r\n  pinMode(WHEEL_3, INPUT); //\r\n  pinMode(WHEEL_4, INPUT); //\r\n  pinMode(WHEEL_5, INPUT); //\r\n  pinMode(WHEEL_6, INPUT); //\r\n  pinMode(WHEEL_7, INPUT); //\r\n\r\n  for (int i = 0; i < 16; i++) {\r\n    pinMode(Pin[i], OUTPUT); // устанавливаем на выход\r\n    digitalWrite(Pin[i], LOW); // устанавливаем низкий уровень\r\n    Rect[i] = LOW;\r\n  }\r\n}\r\n\r\nvoid loop() {\r\n  for (int i = 0; i < 16; i++) { // сброс выводов по всем адресам\r\n    Rect[i] = LOW;\r\n  }\r\n  Rect[address] = HIGH; //начало ректа по заданному адресу\r\n//-------------- Переключение режима работы внутрь или наружу зеркала---------------\r\nDirection = " + Direction + "; // direction 150 (наружу) или 850 (внутрь) МЕНЯЮТСЯ ЗНАЧЕНИЯ МЕНЯЮТСЯ ЗНАЧЕНИЯ МЕНЯЮТСЯ ЗНАЧЕНИЯ\r\n  if ( Direction > 300 && Direction < 700) {\r\n    channelIncrement = 1; // адреса поочередно наружу-внутрь\r\n  } else if ( Direction <= 300 ) { // наружу\r\n    channelIncrement = 2;\r\n    if (flagDirection)  {\r\n      address = 1;\r\n      flagDirection = false;\r\n    }\r\n  } else if ( Direction >= 700 ) { // внутрь\r\n    channelIncrement = 2;\r\n    if (flagDirection) {\r\n      address = 0;\r\n      flagDirection = false;\r\n    }\r\n  }\r\n//------------- Выработка деформации -------------------------\r\n  durationPAUSE = " + PauseDuration + "; // МЕНЯЮТСЯ ЗНАЧЕНИЯ МЕНЯЮТСЯ ЗНАЧЕНИЯ МЕНЯЮТСЯ ЗНАЧЕНИЯ\r\n  if ( millis() - timerPAUSE >= durationPAUSE ) {\r\n    timerPAUSE = millis();\r\n    Deformation += " + Deformation + "; //инкрементируем деформацию МЕНЯЮТСЯ ЗНАЧЕНИЯ МЕНЯЮТСЯ ЗНАЧЕНИЯ МЕНЯЮТСЯ ЗНАЧЕНИЯ\r\n//    Deformation = 2000; //фиксированная деформация (для проверки)\r\n    if (Deformation >= Amplitude) { // при достижении максимума\r\n      Deformation = 0;             // отпускаем в ноль\r\n      address += channelIncrement; //меняем канал\r\n     //       if (address >= 4) {address = 0;\r\n      if (address >= 16) {\r\n        address = 0;\r\n        flagDirection = true; // разрешаем менять режим работы внутрь-наружу\r\n      }\r\n    }\r\n  }\r\n\r\n  if ( analogRead(WHEEL_1) >= 1000) delay(500);// медленный режим\r\n\r\n  //--------------- Адресация ---------------------\r\n  for (int i = 0; i < 16; i++ ) {\r\n    digitalWrite(Pin[i], Rect[i]);  //выработка ректа\r\n  }\r\n  sendDate();   //  Передача деформации ведомым устройствам\r\n\r\n  Serial.print(Deformation ); Serial.print(\" \");\r\n  Serial.print( Amplitude );   Serial.print(\" \");\r\n  //  Serial.print(Rect[address] * 1000 * (address + 1));  Serial.print(\" \");\r\n  Serial.println(\" \");\r\n}\r\n\r\nvoid sendDate() { // Передача деформации в Нано\r\n  byte hi_Deformation = highByte(Deformation); //  деформация\r\n  byte low_Deformation = lowByte(Deformation); //\r\n  Wire.beginTransmission(1); // Начало посылки\r\n  Wire.write(hi_Deformation);\r\n  Wire.write(low_Deformation);\r\n  Wire.endTransmission();     // Конец посылки\r\n}";
        }
    }
}
